Transform: AWS::Serverless-2016-10-31 # (SAM)

Parameters:
  # SENDER_EMAIL_ADDRESS
  SenderEmailAddress:
    Type: String
    Description: Dirección de correo verificada en AWS SES que usará la Lambda para enviar emails.
    Default: ''
  
  # TURNSTILE_SECRET_KEY
  TurstileSecretKey:
    Type: String
    Description: Secreto de Turstile.
    Default: ''
  
  # apis urls
  ApisUrl:
    Type: String
    Description: Url de las apis (se usa solo para construir la url que se envia por email al registrarse).
    Default: 'https://www.your_web.com/api/'
  
   
Conditions:
  ShouldEnableSES: !Not [!Equals [!Ref SenderEmailAddress, '']]


Resources:
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Users
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: email 
          KeyType: HASH # pk
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S # S = String (cadena de texto)


  SignUp:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      FunctionName: sign-up
      Handler: bootstrap
      Runtime: provided.al2
      CodeUri: sign-up/ # api folder
      MemorySize: 128 # RAM in MB
      Timeout: 10 # Max time execution in seconds
      Environment: # Env vars
        Variables:
          USERS_TABLE: !Ref UsersTable
          SENDER_EMAIL_ADDRESS: !Ref SenderEmailAddress
          JWT_SECRET_2: "SecondaryInsecureSecretJWT0000VDFD45353E3534"
          TURNSTILE_SECRET_KEY: !Ref TurstileSecretKey
          
          CONFIRMATION_URL: !Sub ApisUrl + "/check-in"
      Events: # API Gateway integration
        Api:  
          Type: HttpApi
          Properties:
            Path: /sign-up
            Method: post
      Policies:
        - !If [
            ShouldEnableSES,
            # Valor si la condición es TRUE (Incluir política SES)
            {
              Statement: {
                Effect: Allow,
                Action: "ses:SendEmail",  # O ses:SendRawEmail si usas un formato más complejo
                Resource: !Sub "arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/${SenderEmailAddress}"
              }
            },
            # Valor si la condición es FALSE (Omitir la política)
            !Ref AWS::NoValue
          ]
          
        - DynamoDBWritePolicy:
            TableName: !Ref UsersTable

  CheckIn:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      FunctionName: check-in
      Handler: bootstrap
      Runtime: provided.al2
      CodeUri: check-in/
      MemorySize: 128
      Timeout: 10

      Environment: # Env vars
        Variables:
          USERS_TABLE: !Ref UsersTable
          JWT_SECRET_2: "SecondaryInsecureSecretJWT0000VDFD45353E3534"

      Events: # API Gateway integration
        Api:
          Type: HttpApi
          Properties:
            Path: /check-in
            Method: get

      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref UsersTable

  Login:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      FunctionName: login
      Handler: bootstrap
      Runtime: provided.al2
      CodeUri: login/
      MemorySize: 128
      Timeout: 10

      Environment: # Env vars
        Variables:
          USERS_TABLE: !Ref UsersTable
          JWT_SECRET: "PrimaryInsecureSecretJWT0000VDFD45353E3534"

      Events: # API Gateway integration
        Api:
          Type: HttpApi
          Properties:
            Path: /login
            Method: post

      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UsersTable
